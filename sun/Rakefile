# -*- ruby -*-

require 'rubygems'
require 'hoe'
require 'rake/testtask'
HOE = Hoe.spec 'haligonia' do
  developer('Ben Goodspeed', 'b.goodspeed@gmail.com')
  self.version   = '0.8.2'
  self.readme_file   = 'README.rdoc'
  self.history_file  = 'CHANGELOG.rdoc'
  self.extra_rdoc_files  = FileList['*.rdoc']
  self.extra_dev_deps << ['rake-compiler', '>= 0']
  self.spec_extras = { :extensions => ["ext/haligonia/extconf.rb"] }
end

require "rake/extensiontask"

task "check_bin" do |t|
  #TODO this might have to be updated to handle windows correctly
  if !File.exists?("lib/haligonia/haligonia.so") or (File.mtime("ext/haligonia/haligonia.c") > File.mtime("lib/haligonia/haligonia.so"))
    `rm lib/haligonia/haligonia.so` if File.exists?("lib/haligonia/haligonia.so")
    `rm -rf tmp/*`
  end
end


Rake::ExtensionTask.new(HOE.name, HOE.spec) do |ext|
  ext.lib_dir = File.join('lib', 'haligonia')
  ext.source_pattern = "*.{c,cpp}"
end

Rake::Task[:compile].prerequisites << "check_bin"

require 'cucumber/rake/task'

Cucumber::Rake::Task.new do |t|
  t.libs << ['lib']
  t.cucumber_opts = %w{--format progress}
end

Cucumber::Rake::Task.new("named_specs") do |t|
  t.libs << ['lib']
  t.cucumber_opts = "--format progress --name \"#{ARGV[1]}\""
end

Cucumber::Rake::Task.new("fast_specs") do |t|
  t.libs << ['lib']
  t.cucumber_opts = %w{--format progress --tags ~@slow}
end

Cucumber::Rake::Task.new("slow_specs") do |t|
  t.libs << ['lib']
  t.cucumber_opts = %w{--format progress --tags @slow}
end

Cucumber::Rake::Task.new("gosu_specs") do |t|
  t.libs << ['lib']
  t.cucumber_opts = %w{--format progress --tags @needs_full_gosu}
end

Cucumber::Rake::Task.new("non_gosu_specs") do |t|
  t.libs << ['lib']
  t.cucumber_opts = %w{--format progress --tags ~@needs_full_gosu}
end

multitask :test_parallel => ["gosu_specs", "non_gosu_specs"]


task "build_artifact" do |t|
  target_dir = "/home/bg/builds"
  rubyenc = "/home/bg/bin/rubyencoder-1.3/bin/rubyencoder"
  version = HOE.version
  name = "Haligonia"
  filename = "#{name}-#{version}"
  path = File.join(target_dir, filename)
  raise "#{name} version #{version} already exists in #{target_dir} (#{path})" if File.exists?(path) or Dir.exists?(path)
  puts "Building #{name} version #{version} in #{path}"
  Dir.mkdir(path)
  `cp -r game-data #{path}`
  `cp -r lib #{path}`
  `cp -r patches #{path}`
  `cp -r rgloader #{path}`
  `cp Gemfile main.rb distribute.rb haligonia.iss #{path}`
  puts "Encoding"
  puts `cd #{path}; #{rubyenc} lib/ lib/**/* main.rb --ruby 1.9.2`
  `cd #{path}; find #{path} -iname '*.bak' | xargs rm `
  puts "TODO: Licence gen if needed"
  puts "Zipping"
  `cd #{target_dir} ; zip -r #{filename}.zip #{filename}`
  puts "Done"

end

task :start_profile do |t|
  puts "starting profile"
  ENV['do_profile'] = "yes"
end

task :profile_fast
Rake::Task[:profile_fast].prerequisites << :start_profile
Rake::Task[:profile_fast].prerequisites << :fast_specs
task :profile
Rake::Task[:profile].prerequisites << :start_profile
Rake::Task[:profile].prerequisites << :cucumber
#Rake::Task[:profile].prerequisites << [:start_profile, :cucumber]

Rake::Task[:default].prerequisites << :cucumber
# vim: syntax=ruby
