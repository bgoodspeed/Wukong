collision_response:
  "EventEmitter":
    "Player": [ trigger_event1 ]
  "PushableElement":
    "Player": [ push_element1 ]
    "LineSegment": [ fizzle_element1 ]
    "PushableElement": [ fizzle_element1, fizzle_element2 ]
  "Weapon":
    "LineSegment": []
    "EventArea": []
  "LineOfSightQuery":
    "LineSegment": [ block_line_of_sight1  ]
    "EventArea": []
    "VectorFollower": []
    "Weapon": []
  "LineSegment":
    "Player": [ blocking2 ]
    "VectorFollower": [ removing2 ]
    "Enemy": [ blocking2 ]
    "LineOfSightQuery": [ block_line_of_sight2 ]
  "Enemy":
    "Enemy": [ ]
    "VectorFollower": [ damaging_showing_and_removing1,  temporary_message1 ]
    "LineSegment": [ blocking1 ]
    "MouseCollisionWrapper": [ mouse_pick1 ]
    "Weapon": [ damaging1 ]
    "LineOfSightQuery": []
    "EventArea": []
  "VectorFollower":
    "Player": []
    "Enemy": [ damaging2, removing1, show_damage2 ]
    "LineSegment": [ removing1 ]
    "EventArea": []
    "LineOfSightQuery": []
  "PickupItem":
    "Player": [ take_inventory1]
    "EventArea": []
  "Player":
    "PickupItem": [ take_inventory2]
    "LineSegment": [ blocking1 ]
    "VectorFollower": [ damaging_showing_and_removing1 ]
    "Enemy": [ damaging1, damaging2, show_damage1, show_damage2 ]
    "EventEmitter": [ trigger_event2 ]
    "EventArea": [ show_info_window2 ]
    "MouseCollisionWrapper": [ mouse_pick1 ]
    "Weapon": [  ]
    "LineOfSightQuery": []
#TODO note that player vs weapon collisions will need to be handled, eg check to see if it's your weapon
  "MouseCollisionWrapper":
    "Player": [ mouse_pick2 ]
    "EventArea": [ mouse_pick2 ]